# This workflow compiles CSPICE for many architectures and publishes a branch
# to Test-PyPi or PyPi

name: Publish to PyPI
run-name: Publish ${{ inputs.prelease_version }} by ${{ github.actor }}

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      prerelease_version:
        description: 'Prerelease Version'
        required: true
        default: ''
        type: string

      test_pypi:
        description: 'Release to Test PyPI'
        required: true
        default: true
        type: boolean

      pypi:
        description: 'Release to PyPI'
        required: true
        default: false
        type: boolean

jobs:
  build_python3_wheels:
    name: Build Python 3 wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: '>=3.8'
          CIBW_BEFORE_BUILD: 'pip3 install numpy setuptools && python3 setup.py generate'
          CIBW_ENVIRONMENT: PRERELEASE_VERSION=${{ inputs.prerelease_version }}
          CIBW_SKIP: 'pp* *musllinux* *cp27mu*'
          CIBW_ARCHS: 'auto64'
          CIBW_ARCHS_MACOS: 'x86_64 arm64'

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Build sdist
        run: |
          printenv
          sudo apt install swig
          pip install numpy setuptools wheel
          python3 setup.py generate
          python3 setup.py sdist
        env:
          PRERELEASE_VERSION: ${{ inputs.prerelease_version }}

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz


  upload_pypi:
    needs: [build_python3_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact   # prevents extra directory
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        if: inputs.test_pypi
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verify_metadata: false

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        if: inputs.pypi
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify_metadata: false
