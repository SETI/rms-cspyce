# This is a basic workflow to help you get started with Actions

name: Public Python distribution to TestPyPI

# Controls when the workflow will run
on:
  pull_request:
    branches: [ GitActions ]
  push:
    branches: [ GitActions ]
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_swig_tools:
    if: github.repository == 'fyellin/cspyce-prod'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build Swig Files
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools numpy
          python3 setup.py generate

      - name: Upload SWIG to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: swig
          path: |
            swig/*_wrap.c
            cspyce/typemap_samples.py
            cspyce/cspyce0.py

  build:
    if: github.repository == 'fyellin/cspyce-prod'
    runs-on: ${{ matrix.os }}
    needs: [build_swig_tools]

    strategy:
      matrix:
        python: [2.7, 3.9]
        os: [macos-latest, windows-latest]
        dist: [bdist_wheel]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup Windows compiler
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1.4.1

      - name: Download CSPICE
        run: |
          curl https://naif.jpl.nasa.gov/pub/naif/toolkit//C/PC_Windows_VisualC_32bit/packages/cspice.zip -o cspice.zip
          unzip cspice.zip
          rm cspice.zip

      - name: Get already generated Swig files
        uses: actions/download-artifact@v3
        with:
          name: swig
          path: .

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ format('{0}.x', matrix.python) }}

      - name: Python Build
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine numpy
          python setup.py build_clib build_ext build
          python setup.py ${{ matrix.dist }}

      - name: Publish distribution to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        run:
          python -m twine upload dist/*

      - name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
        run:
          python -m twine upload dist/*
