# This workflow compiles CSPICE for many architectures and publishes a branch
# to Test-PyPi

name: Publish to Test PyPI
run-name: Publish to Test PyPI triggered by ${{ github.triggering_actor }}

# Controls when the workflow will run - manually triggered
# Note that if this workflow is run without a tag on the HEAD commit, the
# version will be marked ".devN" where N is the number of commits since the
# last version tag.
on:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build Python 3 wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: '>=3.8'
          CIBW_BEFORE_BUILD: 'pip3 install numpy setuptools setuptools_scm && python3 setup.py generate && git status && git log --decorate -n 3'
          CIBW_SKIP: 'pp* *musllinux* *cp27mu*'
          CIBW_ARCHS: 'auto64'
          CIBW_ARCHS_MACOS: 'x86_64 arm64'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Build sdist
        run: |
          printenv
          sudo apt install swig
          pip install numpy setuptools setuptools-scm wheel
          pwd
          ls -al
          git status
          git tag -l
          (git log --decorate -n 3)
          python3 -m setuptools_scm
          python3 setup.py generate
          python3 setup.py sdist

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz


  upload_test_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact   # prevents extra directory
          path: dist

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.6
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          verify-metadata: false
